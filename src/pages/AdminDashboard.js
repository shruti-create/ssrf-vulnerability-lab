import React from 'react';
import LoginScreen from './Login';
import HomeScreen from './Home';
import NotesScreen from './Notes'; 
import "bootstrap/dist/css/bootstrap.min.css";
import ReactDOM from "react-dom";
import "bootstrap/dist/js/bootstrap.bundle.min.js";
import "./App.css"
import JobData from './DataFetcher';

class SideNav extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      activeScreen: "Home", 
      isSideNavOpen: true, 
    };
  }

  handleNavClick = (screen) => {
    this.setState({ activeScreen: screen });
    this.props.handleNavClick(screen); 
  };

  handleSideNavClose = () => {
    this.setState((prevState) => ({ isSideNavOpen: !prevState.isSideNavOpen }));
  };


  render() {
    const { activeScreen, isSideNavOpen } = this.state;

    return (
      <>
      {isSideNavOpen && (
          <nav className="sidebar">
          <li
            onClick={() => this.handleNavClick("Admin Dashboard")} 
            className={activeScreen === "Admin Dashboard" ? "active" : ""}
          >
            <i className="fa fa-home"></i>
            <span>Dashboard</span>
          </li>
        <li
            onClick={() => this.handleNavClick("Notes")} 
            className={activeScreen === "Notes" ? "active" : ""}
          >
            <i className="fa fa-user"></i>
            <span>Notes</span>
          </li>
        <li
            onClick={() => this.handleNavClick("Job Data")} 
            className={activeScreen === "JobData" ? "active" : ""}
          >
            <i className="fa fa-user"></i>
            <span>Job Data</span>
          </li>
      </nav>
      )}
      </>
    );
  }
}


class AdminDashboard extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      isLoggedIn: false,
      activeScreen: "Admin Dashboard", 
      isSideNavOpen: true, 
      userData: null
    };
  }

  handleLogin = (userData) => {
    this.setState({isLoggedIn: true, userData: userData});
  };

  handleLogout = () => {
    this.setState({ isLoggedIn: false });
  };

  handleNavClick = (screen) => {
    this.setState({ activeScreen: screen });
  };

  handleSideNavToggle = () => {
    this.setState((prevState) => ({ isSideNavOpen: !prevState.isSideNavOpen }));
  };

  render() {
    const { isLoggedIn, activeScreen, isSideNavOpen, userData } = this.state;

    if (isLoggedIn) {
      return (
        <div className="d-flex">
          {isSideNavOpen && <SideNav handleNavClick={this.handleNavClick} activeScreen={activeScreen} />}
          <button
                style={{ backgroundColor: "#FFFFFF", fontSize: '25px', border: '0px', padding: "0px" }}
                onClick={this.handleSideNavToggle}
              >
                {isSideNavOpen ? "←" : "→"}
              </button>
          <div className={`flex-grow-1 ${isSideNavOpen ? "" : "expanded"}`}>
            <div>
              <h1 style={{ backgroundColor: "#000000", color: "#FFFFFF", padding: "25px", paddingLeft:"15px"}}>
                Welcome, {userData && userData.name}, to your {activeScreen}.
              </h1>
            </div>
            {activeScreen === "Admin Dashboard" ? <HomeScreen userData={userData} /> : null}
            {activeScreen === "Notes" ? <NotesScreen userData={userData} /> : null}
            {activeScreen === "Job Data" ? <JobData /> : null}
          </div>
        </div>
      );
    }

    return <LoginScreen onLogin={this.handleLogin} />;
  }
}

export default AdminDashboard;